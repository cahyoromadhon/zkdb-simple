import { TCollectionRequest } from './collection.js';
import { TDbRecord } from './common.js';
export type TOwnership = {
    databaseName: string;
    owner: string;
};
export type TOwnershipRecord = TDbRecord<TOwnership>;
/**
 * Ownership types
 * @typedef {Object} OwnershipType
 * @property {number} User - User ownership type
 * @property {number} Group - Group ownership type
 * @readonly
 */
export declare enum EOwnershipType {
    User = "User",
    Group = "Group"
}
export type TParamCollectionOwnership = {
    databaseName: string;
    collectionName: string;
    actor: string;
    groupType: EOwnershipType;
    newOwner: string;
};
export type TParamDocumentOwnership = TParamCollectionOwnership & {
    docId: string;
};
export type TOwnershipTransferRequest = TCollectionRequest & {
    groupType: EOwnershipType;
    newOwner: string;
    docId?: string;
};
export type TOwnershipTransferResponse = boolean;
export type TPermissionSetRequest = TCollectionRequest & {
    docId?: string;
    permission: number;
};
export type TPermissionSetResponse = boolean;

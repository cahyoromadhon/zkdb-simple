import type { ObjectId, WithoutId } from 'mongodb';
import { TDbRecord, TPickOptional } from './common.js';
import { TDatabaseRequest, TMetadataDatabase } from './database.js';
import { TUser, TUserRecord } from './user.js';
export type TGroup = {
    groupName: string;
    groupDescription: string;
    createdBy: string;
};
export type TUserGroup = {
    userName: string;
    groupName: string;
    groupObjectId: ObjectId;
    userObjectId: ObjectId;
};
export type TGroupRecord = TDbRecord<TGroup>;
export type TGroupUserInfo = Pick<TUserRecord, 'userName' | 'createdAt' | 'updatedAt'>;
export type TGroupDetail = TGroupRecord & {
    listUser: TGroupUserInfo[];
};
export type TUserGroupRecord = TDbRecord<TUserGroup>;
export type TGroupParam = Pick<TGroup, 'groupName'> & Pick<TMetadataDatabase, 'databaseName'>;
export type TGroupParamCreate = TPickOptional<TGroup, 'groupDescription'> & Pick<TMetadataDatabase, 'databaseName'>;
export type TGroupParamUpdateMetadata = Pick<TGroupParamCreate, 'databaseName' | 'groupName' | 'createdBy'> & {
    newGroupName?: string;
    newGroupDescription?: string;
};
export type TGroupParamListUser = Pick<TGroupParamCreate, 'databaseName' | 'groupName' | 'createdBy'> & {
    listUserName: string[];
};
export type TGroupRequest = TDatabaseRequest & Pick<TGroup, 'groupName'>;
export type TGroupUpdateRequest = TGroupRequest & {
    newGroupName?: string;
    newGroupDescription?: string;
};
export type TGroupUpdateResponse = boolean;
export type TGroupListByUserRequest = TDatabaseRequest & {
    userQuery: Partial<Pick<TUser, 'userName' | 'email' | 'publicKey'>>;
};
export type TGroupListByUserResponse = string[];
export type TGroupListAllRequest = TDatabaseRequest;
export type TGroupListAllResponse = WithoutId<TGroupRecord>[];
export type TGroupDetailRequest = TGroupRequest;
export type TGroupDetailResponse = TGroupDetail | null;
export type TGroupCreateRequest = TDatabaseRequest & TPickOptional<Pick<TGroup, 'groupName' | 'groupDescription'>, 'groupDescription'>;
export type TGroupCreateResponse = boolean;
export type TGroupAddUserListRequest = TGroupRequest & {
    listUser: string[];
};
export type TGroupAddUserListResponse = boolean;
export type TGroupRemoveUserListRequest = TGroupAddUserListRequest;
export type TGroupRemoveUserListResponse = boolean;

import { AddChainArgs, ChainInfoArgs, CreateNullifierArgs, Nullifier, ProviderError, RequestArguments, SendPaymentArgs, SendStakeDelegationArgs, SendTransactionArgs, SendTransactionResult, SendZkTransactionResult, SignFieldsArguments, SignJsonMessageArgs, SignMessageArgs, SignedData, SignedFieldsData, SwitchChainArgs, VerifyFieldsArguments, VerifyJsonMessageArgs, VerifyMessageArgs } from '@aurowallet/mina-provider';
import { IMinaProvider } from '@aurowallet/mina-provider/dist/IProvider';
import { NetworkId, PrivateKey } from 'o1js';
export declare class NodeProvider implements IMinaProvider {
    #private;
    constructor(privateKey: PrivateKey, network: NetworkId);
    privateKey(): string;
    static generate(networkId: NetworkId): NodeProvider;
    request(_args: RequestArguments): Promise<unknown>;
    sendTransaction(args: SendTransactionArgs): Promise<SendZkTransactionResult | ProviderError>;
    sendPayment(_args: SendPaymentArgs): Promise<SendTransactionResult | ProviderError>;
    sendStakeDelegation(_args: SendStakeDelegationArgs): Promise<SendTransactionResult | ProviderError>;
    signMessage(args: SignMessageArgs): Promise<SignedData | ProviderError>;
    verifyMessage(args: VerifyMessageArgs): Promise<boolean | ProviderError>;
    requestAccounts(): Promise<string[] | ProviderError>;
    requestNetwork(): Promise<ChainInfoArgs>;
    signFields(_args: SignFieldsArguments): Promise<SignedFieldsData | ProviderError>;
    verifyFields(_args: VerifyFieldsArguments): Promise<boolean | ProviderError>;
    signJsonMessage(_args: SignJsonMessageArgs): Promise<SignedData | ProviderError>;
    verifyJsonMessage(_args: VerifyJsonMessageArgs): Promise<boolean | ProviderError>;
    createNullifier(_args: CreateNullifierArgs): Promise<Nullifier | ProviderError>;
    addChain(_args: AddChainArgs): Promise<ChainInfoArgs | ProviderError>;
    switchChain(_args: SwitchChainArgs): Promise<ChainInfoArgs | ProviderError>;
    on(_eventName: unknown, _listener: unknown): this;
    removeListener(_eventName: unknown, _listener: unknown): this;
}

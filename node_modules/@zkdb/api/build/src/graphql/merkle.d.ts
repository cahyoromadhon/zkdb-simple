import { TMerkleTreeNodeChildrenRequest, TMerkleTreeNodeChildrenResponse, TMerkleTreeNodeListByLevelRequest, TMerkleTreeNodeListByLevelResponse, TMerkleTreeNodePathResponse, TMerkleTreeProofByDocIdRequest, TMerkleTreeProofByIndexRequest } from "@zkdb/common";
import { TApolloClient } from "./common";
export declare const API_MERKLE: <T>(client: TApolloClient<T>) => {
    merkleNodeByLevel: (variables: TMerkleTreeNodeListByLevelRequest | undefined) => import("./common").TAsyncGraphQLResult<TMerkleTreeNodeListByLevelResponse>;
    merkleNodeChildren: (variables: TMerkleTreeNodeChildrenRequest | undefined) => import("./common").TAsyncGraphQLResult<TMerkleTreeNodeChildrenResponse>;
    merkleNodePath: (variables: TMerkleTreeProofByDocIdRequest | undefined) => import("./common").TAsyncGraphQLResult<TMerkleTreeNodePathResponse>;
    merkleProof: (variables: TMerkleTreeProofByIndexRequest | undefined) => import("./common").TAsyncGraphQLResult<import("@zkdb/common").TMerkleProofDetail>;
    merkleProofDocId: (variables: TMerkleTreeProofByDocIdRequest | undefined) => import("./common").TAsyncGraphQLResult<import("@zkdb/common").TMerkleProofDetail>;
    merkleTreeInfo: (variables: import("@zkdb/common").TDatabaseRequest | undefined) => import("./common").TAsyncGraphQLResult<import("@zkdb/common").TMerkleTreeInfo>;
};
export default API_MERKLE;
